AWSTemplateFormatVersion: '2010-09-09'
Resources:
  ClientesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Clientes
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Principal: 
              Service: 
                - lambda.amazonaws.com
            Action: 
              - sts:AssumeRole
      Policies: 
        - PolicyName: DynamoDBAccess
          PolicyDocument: 
            Version: '2012-10-17'
            Statement: 
              - Effect: Allow
                Action: 
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: 
                  - !GetAtt ClientesTable.Arn

  CreateClienteLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CreateClienteLambda
      Handler: lambdas/createCliente.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: YOUR_S3_BUCKET_NAME
        S3Key: YOUR_CODE_ZIP_PATH
      Runtime: nodejs20.x
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref ClientesTable

  GetClienteLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GetClienteLambda
      Handler: lambdas/getCliente.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: YOUR_S3_BUCKET_NAME
        S3Key: YOUR_CODE_ZIP_PATH
      Runtime: nodejs20.x
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref ClientesTable

  UpdateClienteLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: UpdateClienteLambda
      Handler: lambdas/updateCliente.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: YOUR_S3_BUCKET_NAME
        S3Key: YOUR_CODE_ZIP_PATH
      Runtime: nodejs20.x
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref ClientesTable

  DeleteClienteLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: DeleteClienteLambda
      Handler: lambdas/deleteCliente.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: YOUR_S3_BUCKET_NAME
        S3Key: YOUR_CODE_ZIP_PATH
      Runtime: nodejs20.x
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref ClientesTable

  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ClientesAPI
      Description: API Gateway for Cliente CRUD

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: clientes
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayMethodPost:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: 
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateClienteLambda.Arn}/invocations

  ApiGatewayMethodGet:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: 
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetClienteLambda.Arn}/invocations

  ApiGatewayMethodPut:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: PUT
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: 
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateClienteLambda.Arn}/invocations

  ApiGatewayMethodDelete:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: 
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteClienteLambda.Arn}/invocations

  LambdaApiGatewayPermissionCreate:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CreateClienteLambda.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/POST/clientes

  LambdaApiGatewayPermissionGet:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt GetClienteLambda.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/GET/clientes

  LambdaApiGatewayPermissionUpdate:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt UpdateClienteLambda.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/PUT/clientes

  LambdaApiGatewayPermissionDelete:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt DeleteClienteLambda.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/DELETE/clientes
